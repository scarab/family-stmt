<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;


/**
 * This is the base-model class for table "transaction".
 *
 * @property integer $id
 * @property string $_transactionDate
 * @property string $place
 * @property double $amount
 * @property string $currency
 * @property string $_loadDate
 * @property integer $categoryId
 * @property string $_exportDate
 *
 * @property \app\models\category\Category $category
 * @property string $aliasModel
 */
abstract class Transaction extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName() : string
    {
        return 'transaction';
    }

    /**
     * @inheritdoc
     */
    public function rules(): array
    {
        return [
            [['transactionDate', 'amount', 'loadDate'], 'required'],
            [['transactionDate', 'loadDate', 'exportDate'], 'safe'],
            [['amount'], 'number'],
            [['categoryId'], 'integer'],
            [['place'], 'string', 'max' => 255],
            [['currency'], 'string', 'max' => 3],
            [['categoryId'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\category\Category::class, 'targetAttribute' => ['categoryId' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels(): array
    {
        return [
            'id' => 'ID',
            'transactionDate' => 'Transaction Date',
            'place' => 'Place',
            'amount' => 'Amount',
            'currency' => 'Currency',
            'loadDate' => 'Load Date',
            'categoryId' => 'Category ID',
            'exportDate' => 'Export Date',
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints(): array
    {
        return array_merge(parent::attributeHints(), [
            'transactionDate' => 'Дата-время транзакции по данным банка',
            'place' => 'Место совершения транзакции по данным банка',
            'amount' => 'Сумма транзакции',
            'currency' => 'Валюта транзакции',
            'loadDate' => 'Дата-время загрузки транзакции',
            'categoryId' => 'Указатель на категорию транзакции',
            'exportDate' => 'Дата-время выгрузки во внешний файл данных',
        ]);
    }

    public function getCategory()
    {
        return $this->hasOne(\app\models\category\Category::class, ['id' => 'categoryId']);
    }

    public function setCategory(\app\models\category\Category $category) : void
    {
        $this->category = $category;
    }



}
